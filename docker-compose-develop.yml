version: '2.0'

services:
  baseweb:
    build:
         context: .
         dockerfile: ./docker/web_service/Dockerfile-develop
    environment:
       - SECRET_KEY=${SECRET_KEY}
       - DATABASE_PASSWORD=${DATABASE_PASSWORD}
       - DATABASE_USER=${DATABASE_USER}
       - DATABASE_NAME=${DATABASE_NAME}
       - DATABASE_HOST=${DATABASE_HOST}
       - REDIS_HOST=${REDIS_HOST}
       - REDIS_PORT=${REDIS_PORT}
       - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
       - EMAIL_HOST_USER=${EMAIL_HOST_USER}
       - EMAIL_HOST=${EMAIL_HOST}
       - DEPLOY_ENV=${DEPLOY_ENV}
       - SENTRY_DSN=${SENTRY_DSN}
       - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
       - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
       - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
       - MAX_NUMBER_OF_MESSAGES=${MAX_NUMBER_OF_MESSAGES}
       - VISIBILITY_TIMEOUT=${VISIBILITY_TIMEOUT}
       - WAIT_TIME_SECONDS=${WAIT_TIME_SECONDS}
       - SQS_SYNC_ASYNC_EXCHANGE_QUEUE_URL=${SQS_SYNC_ASYNC_EXCHANGE_QUEUE_URL}
  db:
    image: postgres
    ports:
      - "5477:5432"
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ../.net640kb/:/var/lib/postgresql/data
  redis:
    restart: always
    image: redis
    expose:
      - "6379"
  user_cache:
    restart: always
    image: redis
    expose:
      - "6379"
  web:
    extends: baseweb
    command: /app/docker/web_service/start_uwsgi.sh
    volumes:
    - ./Net640/apps:/app/Net640/apps
    - ./Net640/api:/app/Net640/api
    - ./Net640/settings.py:/app/Net640/settings.py
    - ${LOGS}/django:/app/logs/django
    - static-content:/app/static/
    - media-content:/app/media/
    depends_on:
      - db
      - redis

  daphne:
    extends: baseweb
    command: /app/docker/web_service/start_daphne.sh
    volumes:
    - ./Net640/apps:/app/Net640/apps
    - ${LOGS}/daphne:/app/logs/django/
    - media-content:/app/media/
    depends_on:
      - db
      - redis
  nginx:
    restart: always
    image: nginx:latest
    ports: 
      - "8080:8080"
    depends_on:
          - web
    volumes:
      - static-content:/app/static
      - media-content:/app/media
      - ${LOGS}/nginx:/var/www/logs
      - ./docker/nginx_develop/:/etc/nginx/conf.d
      - ./docker/uwsgi_config/:/srv/config

  selenium:
    image: selenium/standalone-firefox-debug
    ports:
      - 4444:4444   # Selenium
      - 5900:5900   # VNC server, password is secret

volumes:
    static-content:
      driver_opts:
        type: none
        o: bind
        device: $PWD/dev-docker-static/
    media-content:
      driver_opts:
        type: none
        o: bind
        device: $PWD/dev-docker-media/
